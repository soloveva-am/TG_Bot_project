from helpers import get_value_merged, get_color_merged

from typing import Iterator, Tuple
from copy import deepcopy

from openpyxl.worksheet.worksheet import Worksheet

# –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
weekdays = (
    "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
    "–í—Ç–æ—Ä–Ω–∏–∫",
    "–°—Ä–µ–¥–∞",
    "–ß–µ—Ç–≤–µ—Ä–≥",
    "–ü—è—Ç–Ω–∏—Ü–∞",
    "–°—É–±–±–æ—Ç–∞",
    "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ",
)
hour_list = (
    "09:00 ‚Äì 10:25",
    "10:45 ‚Äì 12:10",
    "12:20 ‚Äì 13:45",
    "13:55 ‚Äì 15:20",
    "15:30 ‚Äì 16:55",
    "17:05 ‚Äì 18:30",
    "18:35 ‚Äì 20:00",
)

# —à–∞–±–ª–æ–Ω —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
blank_timetable = {day: {time: "üò¥" for time in hour_list} for day in weekdays}

# —Ü–≤–µ—Ç–Ω—ã–µ –∫—Ä—É–≥–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–µ–º–∏–Ω–∞—Ä–∞–º, –ª–∞–±–∞–º / –∞–Ω–≥–ª—É, –ª–µ–∫—Ü–∏—è–º, –±–∞–∑–æ–≤–æ–º—É –¥–Ω—é –∏ –≤–æ–µ–Ω–∫–µ
colors_to_circles = {
    "#CCFFFF": "üîµ",  # —Å–µ–º–∏–Ω–∞—Ä—ã
    "#92D050": "üîµ",  # —Å–µ–º–∏–Ω–∞—Ä—ã
    "#00FFFF": "üîµ",  # —Å–µ–º–∏–Ω–∞—Ä—ã
    "#66FFFF": "üîµ",  # —Å–µ–º–∏–Ω–∞—Ä—ã
    "#FFFFFF": "üîµ",  # —Å–µ–º–∏–Ω–∞—Ä—ã
    "#00B050": "üîµ",  # —Å–µ–º–∏–Ω–∞—Ä—ã
    "#FFFF99": "üü°",  # –ª–∞–±—ã / –∞–Ω–≥–ª
    "#FF99CC": "üî¥",  # –ª–µ–∫—Ü–∏–∏
    "#CCFFCC": "üü¢",  # –±–∞–∑–æ–≤—ã–π –¥–µ–Ω—å
    "#FFC000": "üü†",  # –≤–æ–µ–Ω–∫–∞
    "#FFCC00": "üü†",  # –≤–æ–µ–Ω–∫–∞
}


def fix_pair_hours(hours: str):
    hours = hours.split()
    # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Ä–µ–º—è –ø–∞—Ä—ã –∫ —Ñ–æ—Ä–º–∞—Ç—É hh:mm ‚Äì hh:mm
    if len(hours[0][:-2]) == 1:
        hours[0] = "0" + hours[0]
    hours = (
        hours[0][:-2]
        + ":"
        + hours[0][-2:]
        + " ‚Äì "
        + hours[2][:-2]
        + ":"
        + hours[2][-2:]
    )
    return hours


def get_all_timetable_from_file(table: Worksheet) -> Iterator[Tuple]:
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Excel —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –≤—ã–¥–µ–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã
    –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –µ–≥–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
    :param table: —Ç–∞–±–ª–∏—Ü–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
    :return:
    """
    for j in range(3, table.max_column + 1):  # —Å–º–æ—Ç—Ä–∏–º –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º
        group_name = table.cell(2, j).value  # –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã
        if group_name in {
            "–î–Ω–∏",
            "–ß–∞—Å—ã",
        }:  # –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã, —Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–æ–ª–±–µ—Ü
            continue
        # –∏–Ω–∞—á–µ –µ—Å–ª–∏ —Å—Ç–æ–ª–±–µ—Ü - —ç—Ç–æ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã, —Ç–æ —Å–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è –Ω–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        elif group_name is not None:
            group_name = str(group_name).strip()
            global blank_timetable
            timetable = deepcopy(blank_timetable)
            for k in range(3, table.max_row + 1):  # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ —Å—Ç–æ–ª–±—Ü—É
                # –µ—Å–ª–∏ –∫–ª–µ—Ç–∫–∏ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫–æ –¥–Ω—é –Ω–µ–¥–µ–ª–∏ (–Ω–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏)
                day, hours, pair = get_value_merged(table, table.cell(k, 1)), None, None
                if day in timetable:
                    hours = get_value_merged(
                        table, table.cell(k, 2)
                    )  # –∫–ª–µ—Ç–∫–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –ª–µ–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
                    pair = get_value_merged(
                        table, table.cell(k, j)
                    )  # –∫–ª–µ—Ç–∫–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –ª–µ–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä—ã
                    color = get_color_merged(table, table.cell(k, j))  # —Ü–≤–µ—Ç –∫–ª–µ—Ç–∫–∏

                # —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ –∫–ª–µ—Ç–∫–∏, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ –ø–∞—Ä—ã, —Ç–∞–∫ –∏ –≤—Ä–µ–º–µ–Ω–∏
                if hours is not None and pair is not None:
                    hours = fix_pair_hours(hours)
                    # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
                    if pair is not None:
                        try:
                            timetable[day][hours] = (
                                colors_to_circles[color] + " " + pair
                            )
                        except KeyError:  # –µ—Å–ª–∏ –ø–æ—è–≤–∏—Ç—Å—è –Ω–æ–≤—ã–π —Ü–≤–µ—Ç, —Ç–æ –æ–Ω –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω –Ω–∞ —ç–∫—Ä–∞–Ω
                            print(color, pair)
            yield group_name, timetable


# TODO: –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏
def get_all_exam_timetable_from_file(table: Worksheet) -> Iterator[Tuple]:
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∏–∑ —Ç–∞–±–ª–∏—Ü—ã Excel —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º —ç–∫–∑–∞–º–µ–Ω–æ–≤ –≤—ã–¥–µ–ª—è–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã
    –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –µ–≥–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
    :param table: —Ç–∞–±–ª–∏—Ü–∞ —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º
    :return:
    """
    for j in range(3, table.max_column + 1):  # —Å–º–æ—Ç—Ä–∏–º –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º
        group_name = table.cell(7, j).value  # –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã
        if group_name is not None:
            if isinstance(
                group_name, int
            ):  # –µ—Å–ª–∏ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã - –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –µ–≥–æ –≤ —Å—Ç—Ä–æ–∫—É
                group_name = str(group_name)
            # group - —Å–ª–æ–≤–∞—Ä—å —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è –≥—Ä—É–ø–ø—ã
            group_name = "".join(group_name.split())
            timetable = dict(–≠–∫–∑–∞–º–µ–Ω—ã={})
            for k in range(8, table.max_row + 1):  # –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ —Å—Ç–æ–ª–±—Ü—É
                # –µ—Å–ª–∏ –∫–ª–µ—Ç–∫–∏ –æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫–æ –¥–Ω—é –Ω–µ–¥–µ–ª–∏ (–Ω–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏)
                date = get_value_merged(table, table.cell(k, 2))  # –∑–Ω–∞—á–µ–Ω–∏–µ –¥–Ω—è
                week_day = get_value_merged(table, table.cell(k, 1))  # –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏
                if date is not None:
                    if date.month == 12:
                        month = "–¥–µ–∫–∞–±—Ä—è"
                    elif date.month == 1:
                        month = "—è–Ω–≤–∞—Ä—è"
                    elif date.month == 5:
                        month = "–º–∞—è"
                    elif date.month == 6:
                        month = "–∏—é–Ω—è"
                    else:
                        month = ""
                    day = (
                        str(date.day) + " " + month + " " + "(" + week_day.lower() + ")"
                    )
                    exam = get_value_merged(
                        table, table.cell(k, j)
                    )  # –∫–ª–µ—Ç–∫–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –ª–µ–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä—ã
                    if exam is not None:
                        timetable["–≠–∫–∑–∞–º–µ–Ω—ã"][day] = exam
                else:
                    continue
            yield group_name, timetable
